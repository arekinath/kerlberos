%% Generated by the Erlang ASN.1 compiler. Version: 5.0.21
%% Purpose: Erlang record definitions for each named and unnamed
%% SEQUENCE and SET, and macro definitions for each value
%% definition in module KRB5.

-ifndef(_KRB5_HRL_).
-define(_KRB5_HRL_, true).

-record('PrincipalName', {
  'name-type',
  'name-string'
}).

-record('HostAddress', {
  'addr-type',
  address
}).

-record('AuthorizationData_SEQOF', {
  'ad-type',
  'ad-data'
}).

-record('PA-DATA', {
  'padata-type',
  'padata-value'
}).

-record('EncryptedData', {
  etype,
  kvno = asn1_NOVALUE,
  cipher
}).

-record('EncryptionKey', {
  keytype,
  keyvalue
}).

-record('Checksum', {
  cksumtype,
  checksum
}).

-record('Ticket', {
  'tkt-vno',
  realm,
  sname,
  'enc-part'
}).

-record('EncTicketPart', {
  flags,
  key,
  crealm,
  cname,
  transited,
  authtime,
  starttime = asn1_NOVALUE,
  endtime,
  'renew-till' = asn1_NOVALUE,
  caddr = asn1_NOVALUE,
  'authorization-data' = asn1_NOVALUE
}).

-record('TransitedEncoding', {
  'tr-type',
  contents
}).

-record('KDC-REQ', {
  pvno,
  'msg-type',
  padata = asn1_NOVALUE,
  'req-body'
}).

-record('KDC-REQ-BODY', {
  'kdc-options',
  cname = asn1_NOVALUE,
  realm,
  sname = asn1_NOVALUE,
  from = asn1_NOVALUE,
  till,
  rtime = asn1_NOVALUE,
  nonce,
  etype,
  addresses = asn1_NOVALUE,
  'enc-authorization-data' = asn1_NOVALUE,
  'additional-tickets' = asn1_NOVALUE
}).

-record('KDC-REP', {
  pvno,
  'msg-type',
  padata = asn1_NOVALUE,
  crealm,
  cname,
  ticket,
  'enc-part'
}).

-record('EncKDCRepPart', {
  key,
  'last-req',
  nonce,
  'key-expiration' = asn1_NOVALUE,
  flags,
  authtime,
  starttime = asn1_NOVALUE,
  endtime,
  'renew-till' = asn1_NOVALUE,
  srealm,
  sname,
  caddr = asn1_NOVALUE,
  'encrypted-pa-data' = asn1_NOVALUE
}).

-record('LastReq_SEQOF', {
  'lr-type',
  'lr-value'
}).

-record('AP-REQ', {
  pvno,
  'msg-type',
  'ap-options',
  ticket,
  authenticator
}).

-record('Authenticator', {
  'authenticator-vno',
  crealm,
  cname,
  cksum = asn1_NOVALUE,
  cusec,
  ctime,
  subkey = asn1_NOVALUE,
  'seq-number' = asn1_NOVALUE,
  'authorization-data' = asn1_NOVALUE
}).

-record('AP-REP', {
  pvno,
  'msg-type',
  'enc-part'
}).

-record('EncAPRepPart', {
  ctime,
  cusec,
  subkey = asn1_NOVALUE,
  'seq-number' = asn1_NOVALUE
}).

-record('KRB-SAFE', {
  pvno,
  'msg-type',
  'safe-body',
  cksum
}).

-record('KRB-SAFE-BODY', {
  'user-data',
  timestamp = asn1_NOVALUE,
  usec = asn1_NOVALUE,
  'seq-number' = asn1_NOVALUE,
  's-address',
  'r-address' = asn1_NOVALUE
}).

-record('KRB-PRIV', {
  pvno,
  'msg-type',
  'enc-part'
}).

-record('EncKrbPrivPart', {
  'user-data',
  timestamp = asn1_NOVALUE,
  usec = asn1_NOVALUE,
  'seq-number' = asn1_NOVALUE,
  's-address',
  'r-address' = asn1_NOVALUE
}).

-record('KRB-CRED', {
  pvno,
  'msg-type',
  tickets,
  'enc-part'
}).

-record('EncKrbCredPart', {
  'ticket-info',
  nonce = asn1_NOVALUE,
  timestamp = asn1_NOVALUE,
  usec = asn1_NOVALUE,
  's-address' = asn1_NOVALUE,
  'r-address' = asn1_NOVALUE
}).

-record('KrbCredInfo', {
  key,
  prealm = asn1_NOVALUE,
  pname = asn1_NOVALUE,
  flags = asn1_NOVALUE,
  authtime = asn1_NOVALUE,
  starttime = asn1_NOVALUE,
  endtime = asn1_NOVALUE,
  'renew-till' = asn1_NOVALUE,
  srealm = asn1_NOVALUE,
  sname = asn1_NOVALUE,
  caddr = asn1_NOVALUE
}).

-record('KRB-ERROR', {
  pvno,
  'msg-type',
  ctime = asn1_NOVALUE,
  cusec = asn1_NOVALUE,
  stime,
  susec,
  'error-code',
  crealm = asn1_NOVALUE,
  cname = asn1_NOVALUE,
  realm,
  sname,
  'e-text' = asn1_NOVALUE,
  'e-data' = asn1_NOVALUE
}).

-record('TYPED-DATA_SEQOF', {
  'data-type',
  'data-value' = asn1_NOVALUE
}).

-record('PA-ENC-TS-ENC', {
  patimestamp,
  pausec = asn1_NOVALUE
}).

-record('ETYPE-INFO-ENTRY', {
  etype,
  salt = asn1_NOVALUE
}).

-record('ETYPE-INFO2-ENTRY', {
  etype,
  salt = asn1_NOVALUE,
  s2kparams = asn1_NOVALUE
}).

-record('AD-KDCIssued', {
  'ad-checksum',
  'i-realm' = asn1_NOVALUE,
  'i-sname' = asn1_NOVALUE,
  elements
}).

-record('AD-AND-OR', {
  'condition-count',
  elements
}).

-record('PA-PAC-REQUEST', {
  'include-pac'
}).

-define('id-krb5', {1,3,6,1,5,2}).
-endif. %% _KRB5_HRL_
